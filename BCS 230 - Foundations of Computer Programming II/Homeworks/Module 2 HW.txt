#include <iostream>
#include <string>
#include <math.h>
#include <iomanip>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void temp();
void fibonacci();
bool Mike(int number);
void November(int grade);
void QuadraticFormula(int a, int b, int c);
int DieRoll();
void MultiDieRoll(int times);
void Swap(int& num1, int& num2);
void checkSquares(int bottom, int top);
void Factor(int num);


int main()
{
	srand(time(nullptr));

	temp();
	std::cout << std::endl;

	fibonacci();
	std::cout << std::endl;

	Mike(12323451);
	std::cout << std::endl;

	November(86);
	std::cout << std::endl;

	QuadraticFormula(1, 3, -4);
	std::cout << std::endl;

	std::cout << DieRoll() << std::endl;
	std::cout << std::endl;

	MultiDieRoll(3);
	std::cout << std::endl;
	std::cout << std::endl;

	int num1 = 0, num2 = 100;
	Swap(num1, num2);
	std::cout << num1 << " is larger than " << num2 << std::endl;
	std::cout << std::endl;

	checkSquares(5, 20);
	std::cout << std::endl;
	std::cout << std::endl;

	Factor(15);


}

void temp()
{
	//1. Use a for loop to list Celsius and Fahrenheit temperatures. The "C" should be from -20 to 20 and the F should be shown correspondingly (F = (9/5)*C+32).
	for (int celsius = -20; celsius <= 20; celsius++)
	{
		double farenheit = (9.0/5.0) * celsius + 32.0;
		std::cout << celsius << " C  =  " << farenheit << " F" << std::endl;
	}

}

//2. The Fibonacci sequence is: 1,1,2,3,5,8,13,21, etc. Use a for loop to list the first 20 Fibonacci numbers.
void fibonacci()
{
	const int size = 20;
	int sequence[size];

	sequence[0] = 1;
	sequence[1] = 1;

	for (int x = 2; x < size; x++)
	{
		sequence[x] = sequence[x - 1] + sequence[x - 2];
	}

	for (int y = 0; y < size; y++)
	{
		std::cout << sequence[y] << ", ";
	}
}

//3. Create a function called Mike that takes in int numberand returns true if it is prime and false otherwise.
bool Mike(int number)
{
	for (int x = 2; x < sqrt(number); x++)
	{
		if (number % x == 0)
			return 0;
	}

	return 1;
}

//4. Create a function called November that takes in an int grade.If grade is between 90 and 100 it should output “You got an A”.If grade is between 80 and 89 it should output “You got a B”.If grade is between 70 and 79 it should output “You got a C”.If grade is lower than 70 it should output, “You did not pass”.
void November(int grade)
{
	if (grade >= 90 && grade <= 100)
	{
		std::cout << "You got an A!" << std::endl;;
	}
	
	else if (grade >= 80 && grade <= 89)
	{
		std::cout << "You got a B." << std::endl;;
	}

	else if (grade >= 70 && grade <= 79)
	{
		std::cout << "You got a C." << std::endl;;
	}

	else if (grade > 70)
	{
		std::cout << "You failed." << std::endl;;
	}
}

//5. Create a function called QuadraticFormula that takes in a, b, and cand does the quadratic formula.It should first check that b2 - 4ac is not negative; if it is, end the program.If it is not, output to the console the two solutions.
void QuadraticFormula(int a, int b, int c)
{
	int solution1=0, solution2=0;

	if (((pow(b, 2)) - (4*a*c)) < 0)
	{
		exit;
	}

	else
	{
		solution1 = ((-b) + sqrt((pow(b, 2) - (4*a*c)))) / (2*a);
		solution2 = ((-b) - sqrt((pow(b, 2) - (4*a*c)))) / (2*a);
		std::cout << "Answer 1: " << solution1 << " Answer 2: " << solution2 << std::endl;;
	}

}

//6. Create a function called DieRoll.It should create a random number between 1 and 6 and return the result.
int DieRoll()
{
	return (rand() % 6) + 1;
}

//7. Create a function called MultyDieRoll.It should take in an integer and run the function DieRoll that number of times, printing out each result to the console.
void MultiDieRoll(int times)
{

	for (int x = 0; x < times; x++)
	{
		std::cout<< "Roll "<<x+1<<": "<<(rand() % 6) + 1<< ", ";
	}
}

//8. Create a function called Swap.It should take in two numbers by reference(use the & operator for this) and ensure that firstNum is the larger oneand secondNum is the smaller one.
void Swap(int& num1, int& num2)
{

	if (num2 > num1)
	{
		int smaller = 0;

		smaller = num1;

		num1 = num2;

		num2 = smaller;

	}
}

//9. Create a function called checkSquares.It should take in two numbers bottomand top.It should output to the console any numbers in the range from bottom to top that are perfect squares.So if you take in 5 to 20 it should output 9 and 16 to the console.
void checkSquares(int bottom, int top)
{
	for (int x = bottom; x <= top; x++)
	{
		for (int i = 1; pow(i, 2) <= x; i++)
		{
			if ((x % i == 0) && (x / i == i))
			{
				std::cout << x << ", ";
			}
		}
	}
}

//10. Create a function called Factor.It should output to the console all the factors of a number.So, if you receive 15, it should output 1, 3, 5.
void Factor(int num)
{
	for (int x = 1; x <= num; x++)
	{
		if (num % x == 0)
			std::cout << x << ", ";
	}
}

